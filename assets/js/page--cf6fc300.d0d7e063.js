(window.webpackJsonp=window.webpackJsonp||[]).push([[51],{499:function(e,t,o){"use strict";o.r(t);var s=o(2),r=Object(s.a)({},(function(){var e=this,t=e.$createElement,o=e._self._c||t;return o("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[o("p",[e._v("What are the three states of a Promise?")]),e._v(" "),o("p",[e._v("Pending: Initial State (before the Promise succeeds or fails)\nResolved: Completed Promise\nRejected: Failed Promise")]),e._v(" "),o("p",[e._v('How do promises seek to resolve the issues of "callback hell"?')]),e._v(" "),o("p",[e._v("Better definition of control flow of asynchronous logic, reduced coupling, and better error handling\nimproved readability. JavaScript promises let your async call return a value like synchronous function, that value is an object that promises success or failure value.")]),e._v(" "),o("p",[e._v("What is the difference between .then() and .catch()?")]),e._v(" "),o("p",[e._v("The then( ) method is only for resolved Promises. Use the catch( ) method if the Promise fails.")]),e._v(" "),o("p",[e._v("https://amgorder.github.io/gregslist/")])])}),[],!1,null,null,null);t.default=r.exports}}]);