(window.webpackJsonp=window.webpackJsonp||[]).push([[43],{488:function(e,a,t){"use strict";t.r(a);var s=t(2),i=Object(s.a)({},(function(){var e=this,a=e.$createElement,t=e._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("p",[e._v("What is Scope?")]),e._v(" "),t("p",[e._v("Scope is the accessibility of a variable. An example of Local Scope would be a variable inside of a function has a scope relative to the function. An example of Global Scope would be declared CONST variables scope relative to its availability everywhere.")]),e._v(" "),t("p",[e._v("What is Hoisting?")]),e._v(" "),t("p",[e._v("Hoisting is when a variable is being declared after it has been used. This is one of the reasons we use LET instead of VAR as a best practice. VAR can be hoisted, LET does not.")]),e._v(" "),t("p",[e._v("In what cases might you use let vs const vs var?")]),e._v(" "),t("p",[e._v("CONST is used when a variable should not be changed. LET is used as a variable that its value can be changed. VAR is used in the case where you would want to utilize the hoisting feature.")]),e._v(" "),t("p",[e._v("https://amgorder.github.io/js-test-basics/")])])}),[],!1,null,null,null);a.default=i.exports}}]);